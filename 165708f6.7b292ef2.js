(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var i=n(0),r=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),d=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=d(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=d(n),u=i,f=b["".concat(o,".").concat(u)]||b[u]||p[u]||a;return n?r.a.createElement(f,c(c({ref:t},l),{},{components:n})):r.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},144:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image1-6b70f32ffbff8dede8473ee72041bb97.png"},191:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/SSLPolicyF-0d6b478b56f6f3b7245091043ee68d03.png"},192:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/SSLCatA-bda8c06305fb27c9a4d65d49e9795ce5.png"},193:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image2-54f538578df38c046acdceaa5cac20af.png"},194:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image3-ceffd1f45e84f2b9308ed0c883b3d4d3.png"},195:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image4-869eab297232467347b492d5aef45268.png"},196:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image5-e995a2e92200ec969fd96c3f2fd09df8.png"},197:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image6-d95259cd48e7f06b0d7d196ef26898fe.png"},198:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image7-ab1e5b78f33ec58aec31929040a88c8c.png"},199:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image8-aebf6b137bf514bd18bd7860fff4b269.png"},200:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image9-dbfd10854d785f17b20bc71280588745.png"},201:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image10-b228b26f40cd5dbadcd3d4f46ee8eedb.png"},202:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image11-d805bd9ef187cf2af49c305128ff4993.png"},203:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image12-322ec8a8e990761eeb6628ee200c78e9.png"},204:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image13-dc69702d409b93e46cc48fd124b3c7ff.png"},205:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image14-de29fae7f7fd21f9255c2d0c54e0eb23.png"},206:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/image15-47d4eeb359c15bf10f4a1ad42793c9ec.png"},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var i=n(3),r=n(7),a=(n(0),n(101)),o=["components"],c={id:"ssl-policy",title:"SSL Policy",description:"Configuring an SSL Policy on Secure Firewall",hide_table_of_contents:!1},s={unversionedId:"ssl-policy",id:"ssl-policy",isDocsHomePage:!1,title:"SSL Policy",description:"Configuring an SSL Policy on Secure Firewall",source:"@site/docs/FMC_SSLP.md",slug:"/ssl-policy",permalink:"/securefirewallessentials/docs/ssl-policy",editUrl:"https://securefirewallessentials.github.io/docs/FMC_SSLP.md",version:"current",sidebar:"firstSidebar",previous:{title:"Intrusion Policy",permalink:"/securefirewallessentials/docs/intrusion-policy"},next:{title:"Access Control Policy",permalink:"/securefirewallessentials/docs/access-control-policy"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"SSL Decryption Policy",id:"ssl-decryption-policy",children:[{value:"Evaluation of SSL rules",id:"evaluation-of-ssl-rules",children:[]},{value:"Actions for an SSL policy rule",id:"actions-for-an-ssl-policy-rule",children:[]},{value:"Deployment modes for TLS Decryption",id:"deployment-modes-for-tls-decryption",children:[]}]},{value:"Configuration",id:"configuration",children:[{value:"Global Settings ( Trusted CA Certificates and Undecryptable Actions )",id:"global-settings--trusted-ca-certificates-and-undecryptable-actions-",children:[]},{value:"Default Action ( Default SSL Policy Action and Logging )",id:"default-action--default-ssl-policy-action-and-logging-",children:[]},{value:"SSL Rule Recommendations",id:"ssl-rule-recommendations",children:[]}]},{value:"Special Considerations",id:"special-considerations",children:[{value:"Replace Known Key for Decrypt with Resign",id:"replace-known-key-for-decrypt-with-resign",children:[]},{value:"EUN (End User Notification) for Blocked Traffic",id:"eun-end-user-notification-for-blocked-traffic",children:[]},{value:"TLS Client Hello Modification",id:"tls-client-hello-modification",children:[]},{value:"Handling TLS 1.3 Servers",id:"handling-tls-13-servers",children:[]},{value:"Browser Errors related to Untrusted Certificates",id:"browser-errors-related-to-untrusted-certificates",children:[]},{value:"Exceptions from Decryption",id:"exceptions-from-decryption",children:[]}]},{value:"Verification/Troubleshooting",id:"verificationtroubleshooting",children:[]},{value:"Summary",id:"summary",children:[]},{value:"References",id:"references",children:[]}],d={toc:l};function b(e){var t=e.components,c=Object(r.a)(e,o);return Object(a.b)("wrapper",Object(i.a)({},d,c,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"May 22, 2021"),Object(a.b)("h2",{id:"introduction"},"Introduction"),Object(a.b)("p",null,"The rapid rise in encrypted traffic is transforming the threat\nlandscape. As of August 2020, ",Object(a.b)("a",{parentName:"p",href:"https://transparencyreport.google.com/https/overview?hl=en"},"95% of Google's traffic is encrypted"),",\nand nearly ",Object(a.b)("a",{parentName:"p",href:"https://letsencrypt.org/stats/#percent-pageloads"},"85% of the webpages loaded by Firefox are encrypted"),".\nBased on an earlier Gartner estimate from 2019, more than 80% of enterprise\nweb traffic was encrypted, and a recent Gartner report states that 54%\nof network threats are found in encrypted traffic."),Object(a.b)("p",null,"Visibility into encrypted traffic is critical for effective network\nsecurity. However, TLS decryption is a resource-intensive process and,\nif improperly configured, could potentially allow attacks and even\ndegrade the end-user experience. This document covers the best practices\nfor configuring TLS inspection on Firepower Threat Defense (FTD)."),Object(a.b)("h2",{id:"ssl-decryption-policy"},"SSL Decryption Policy"),Object(a.b)("p",null,"The SSL policy governs how Firepower Threat Defense (FTD) handles\nencrypted traffic. Visibility into the TLS encrypted traffic provides\nbetter information for IPS inspection, File and Malware detection, and\nmicro application visibility. Apart from inspecting flows, you can use\nthe TLS/SSL policies to block server connections supporting older\nSSL/TLS versions or weak ciphers."),Object(a.b)("p",null,"If configured, SSL policy evaluation occurs before an IPS and File\nPolicy."),Object(a.b)("p",null,Object(a.b)("img",{src:n(191).default})),Object(a.b)("h3",{id:"evaluation-of-ssl-rules"},"Evaluation of SSL rules"),Object(a.b)("p",null,"The SSL rules are evaluated top-down. Some of the flows might match more\nthan one rule, called an \"ambiguous match,\" based on the field used to\ndefine the SSL rule. The figure below shows the various fields available\nto configure an SSL rule match. The SSL rule's complexity determines\nthe resources used to establish the policy match's verdict for a flow."),Object(a.b)("p",null,Object(a.b)("img",{src:n(144).default})),Object(a.b)("p",null,"Three broad information categories to match a TLS policy rule determine\nthe effort involved:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Before TLS Handshake"),Object(a.b)("th",{parentName:"tr",align:null},"TLS Client Hello"),Object(a.b)("th",{parentName:"tr",align:null},"TLS Server Response"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"FTD has the L2-L4 information about the flow"),Object(a.b)("td",{parentName:"tr",align:null},"FTD has the additional information of SNI ( Server Name Identification"),Object(a.b)("td",{parentName:"tr",align:null},"Server Certificate information and Server Hello")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"Interface Zones, Networks, Geolocation, VLAN Tags, User Identity, Protocol and Ports"),Object(a.b)("td",{parentName:"tr",align:null},"Application, URL Category and Reputation"),Object(a.b)("td",{parentName:"tr",align:null},"Certificate attributes, Ciphers, Versions, SNI mismatch")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"TLS handshake inspection not required"),Object(a.b)("td",{parentName:"tr",align:null},"Initial match using SNI"),Object(a.b)("td",{parentName:"tr",align:null},"Most reliable information")))),Object(a.b)("p",null,Object(a.b)("img",{src:n(192).default})),Object(a.b)("h3",{id:"actions-for-an-ssl-policy-rule"},"Actions for an SSL policy rule"),Object(a.b)("p",null,Object(a.b)("img",{src:n(193).default})),Object(a.b)("h3",{id:"deployment-modes-for-tls-decryption"},"Deployment modes for TLS Decryption"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Inbound"),Object(a.b)("th",{parentName:"tr",align:null},"Outbound"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"Use Server Private Key and certificate"),Object(a.b)("td",{parentName:"tr",align:null},"Resign External Server Certificate using Internal CA")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"Protects internal servers"),Object(a.b)("td",{parentName:"tr",align:null},"Inspect Outbound traffic")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"Decrypt -- Known Key"),Object(a.b)("td",{parentName:"tr",align:null},"Decrypt -Resign")))),Object(a.b)("p",null,Object(a.b)("img",{src:n(194).default})),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Outbound -- Decrypt with Resign")),Object(a.b)("p",null,Object(a.b)("img",{src:n(195).default})),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inbound -- Decrypt with Known Key")),Object(a.b)("p",null,Object(a.b)("img",{src:n(196).default})),Object(a.b)("p",null,Object(a.b)("img",{src:n(197).default})),Object(a.b)("p",null,Object(a.b)("img",{src:n(198).default})),Object(a.b)("p",null,"Decrypt Resign rules require Internal CA objects, for which there are\nthree options:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"A Self-Signed Certificate using the FMC as the Root CA")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Use the Internal Organization CA to sign the FMC certificate")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Import an Internal CA certificate"))),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"The first option is not recommended as the users' browsers do\nnot trust the FMC self-signed certificate causing all the decrypted\nsessions to generate browser certificate errors."))),Object(a.b)("p",null,"Decrypt Known Key rules require Internal Certs Objects. The Decrypt with\nKnown Key rule is selected when the traffic matches the rule, and the\ncertificate used to encrypt the traffic matches the certificate\nassociated with the rule."),Object(a.b)("h2",{id:"configuration"},"Configuration"),Object(a.b)("p",null,"You can configure multiple SSL policies. However, only one SSL policy is\nassociated with an access control policy, which can be associated with\none or more FTDs. As explained earlier, SSL rules require various\ndegrees of information to match a flow and reach a verdict. The\nrecommended SSL policy configuration is comprised of three sections:"),Object(a.b)("h3",{id:"global-settings--trusted-ca-certificates-and-undecryptable-actions-"},"Global Settings ( Trusted CA Certificates and Undecryptable Actions )"),Object(a.b)("h4",{id:"trusted-ca-certificates"},"Trusted CA Certificates"),Object(a.b)("p",null,'The FTD SSL policy includes a wide range of trusted CA root and\nintermediate certificates issued by third parties. A Trusted CA group\nobject called "Cisco-Trusted-Authorities" is added by default when\ncreating an SSL policy. These are needed when configuring\n"Decrypt-Resign" rules using the Certificate status of the external\nserver.'),Object(a.b)("p",null,"To add a Trusted CA, it is recommended to upload all certificates within\na root CA's chain of trust to the ",Object(a.b)("strong",{parentName:"p"},"Trusted CA certificates"),". A\nrequirement to detect certificates issued by intermediate CAs."),Object(a.b)("p",null,Object(a.b)("img",{src:n(199).default})),Object(a.b)("h4",{id:"undecryptable-actions"},"Undecryptable Actions"),Object(a.b)("p",null,"These settings configure FTD to handle an undecryptable flow."),Object(a.b)("p",null,Object(a.b)("img",{src:n(200).default})),Object(a.b)("p",null,'The above screenshot shows the recommended default settings for the\nundecryptable traffic with the default action as "Do Not Decrypt."'),Object(a.b)("h3",{id:"default-action--default-ssl-policy-action-and-logging-"},"Default Action ( Default SSL Policy Action and Logging )"),Object(a.b)("p",null,"When creating a new SSL policy, the default action for traffic that does\nnot match any SSL rules is ",Object(a.b)("strong",{parentName:"p"},"Do Not Decrypt"),". For most cases, this is\nthe recommended setting. However, to block all TLS connections that do\nnot match a decryption rule, set the Default Action to ",Object(a.b)("strong",{parentName:"p"},"Block/Block\nwith Reset"),"."),Object(a.b)("p",null,Object(a.b)("img",{src:n(201).default})),Object(a.b)("p",null,"It is essential to track connections through Default Logging settings\nwhen allowing undecryptable connections (using ",Object(a.b)("strong",{parentName:"p"},"Do Not Decrypt")," as the\nDefault Action)."),Object(a.b)("h3",{id:"ssl-rule-recommendations"},"SSL Rule Recommendations"),Object(a.b)("h4",{id:"rule-ordering"},"Rule Ordering"),Object(a.b)("p",null,"The recommended order of configuring SSL rules is to arrange the rules\nsuch that ",Object(a.b)("strong",{parentName:"p"},"the rules that require the least amount of information to\ndetermine the outcome are the top"),". Also, bear in mind the need to only\ndecrypt necessary traffic, therefore place the ",Object(a.b)("strong",{parentName:"p"},"Block and Do Not\nDecrypt")," rules before the ",Object(a.b)("strong",{parentName:"p"},"Decrypt Known Key and Decrypt Resign"),"\nrules."),Object(a.b)("p",null,Object(a.b)("img",{src:n(144).default})),Object(a.b)("h4",{id:"protecting-from-weak-tls-servers"},"Protecting from 'weak' TLS servers"),Object(a.b)("p",null,"Block Traffic to sites using weak TLS ciphers, older TLS versions or\nproblematic certificates ( e.g. invalid, self-signed )."),Object(a.b)("p",null,Object(a.b)("img",{src:n(202).default}),"\n",Object(a.b)("img",{src:n(203).default}),"\n",Object(a.b)("img",{src:n(204).default})),Object(a.b)("h2",{id:"special-considerations"},"Special Considerations"),Object(a.b)("h3",{id:"replace-known-key-for-decrypt-with-resign"},"Replace Known Key for Decrypt with Resign"),Object(a.b)("p",null,"For the Decrypt -- Resign action, Firepower replaces the public key. The\nReplace Key checkbox determines how to apply the decrypt action to\nself-signed server certificates."),Object(a.b)("p",null,"If deselecting the Replace Key checkbox, self-signed certificates are\ntreated like any other server certificate. Firepower replaces the key\nand resigns the certificate. Generally, the endpoint is configured to\ntrust Firepower, and therefore trusts the resigned certificate."),Object(a.b)("p",null,"If Replace Key is selected, self-signed certificates are handled\ndifferently. Firepower replaces the key and generates a new self-signed\ncertificate causing the endpoint's browser to generate a certificate\nwarning."),Object(a.b)("h3",{id:"eun-end-user-notification-for-blocked-traffic"},"EUN (End User Notification) for Blocked Traffic"),Object(a.b)("p",null,Object(a.b)("img",{src:n(205).default})),Object(a.b)("p",null,"The HTTP Block Response page is configured as part of the Access Control\nPolicy settings and displayed for HTTP and HTTPS(TLS) connections\nblocked by FTD. However, for TLS connections, the Block Response Page is\ndisplayed only if the TLS connection is decrypted by the SSL policy\nbefore an access control policy rule blocks it."),Object(a.b)("p",null,"The Block Response Page is not displayed for TLS traffic not decrypted\nby FTD, irrespective of the reason for the traffic block."),Object(a.b)("h3",{id:"tls-client-hello-modification"},"TLS Client Hello Modification"),Object(a.b)("p",null,"If the TLS Client Hello message matches a Decrypt - Resign rule, FTD\nwill modify it. This function is enabled by default. Along with other\ninformation present in the TLS Client Hello packet, FTD uses the SNI\nfield to predict the need for modification. However, since the TLS SNI\ncan be spoofed, the final decision is based on the Server response."),Object(a.b)("p",null,Object(a.b)("img",{src:n(206).default})),Object(a.b)("p",null,"As shown above, we can block any TLS connection where the SNI field does\nnot match the Server Response. However, this could affect the\nperformance negatively because :"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"FTD might have to modify the TLS Client Hello more often")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"If the TLS Client Hello has already been modified, but the TLS flow\nwas not supposed to be decrypted, FTD cannot disengage and direct\nthe TLS connection to Do Not Decrypt. Due to the Client Hello\nmodification, the Message Authentication Codes (MAC) computed by the\nclient and the server no longer matching, so FTD still has to proxy\nthe complete TLS/SSL handshake between the client and server."))),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"More information about how the changes to the TLS Client Hello\ndone are available\n",Object(a.b)("a",{parentName:"p",href:"https://www.cisco.com/c/en/us/td/docs/security/firepower/660/configuration/guide/fpmc-config-guide-v66/understanding_traffic_decryption.html#id_19974"},"here"),"."))),Object(a.b)("h3",{id:"handling-tls-13-servers"},"Handling TLS 1.3 Servers"),Object(a.b)("p",null,"TLS1.3 encrypts the Server Certification information and might allow for\nthe SNI information encryption in the ",Object(a.b)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/draft-ietf-tls-sni-encryption"},"Client Hello"),".\nFTD does not have visibility into the Server Certificate during a TLS1.3 exchange and\ncurrently does not support TLS1.3 inspection. It inspects by modifying\nthe client TLS Client Hello during the initial evaluation and forcing\nthe server to negotiate on TLS1.2, called ",Object(a.b)("strong",{parentName:"p"},"Aggressive Downgrade"),"."),Object(a.b)("p",null,"Most browsers now enforce TLS1.3 unless required to inspect all the\nTLS1.3 connections. The recommendation is to keep Aggressive Downgrade\ndisabled as it could lead to FTD processing additional TLS flows and\nbrowser errors in some cases."),Object(a.b)("h3",{id:"browser-errors-related-to-untrusted-certificates"},"Browser Errors related to Untrusted Certificates"),Object(a.b)("p",null,"Traffic encrypted with a re-signed server certificate causes client\nbrowsers to warn that the certificate is not trusted. To avoid this, add\nthe CA certificate to the organization's domain root trusted\ncertificates store or the client trusted certificates store."),Object(a.b)("h3",{id:"exceptions-from-decryption"},"Exceptions from Decryption"),Object(a.b)("p",null,"You might exempt traffic from decryption due to various reasons:\nperformance gain or end-user experience. Many mobile devices and\nenterprise SaaS cloud applications use mutual authentication or\ncertificate pinning to validate the application server's certificate.\nSince FTD modifies the server certificate during outbound decryption (\ndecrypt -- resign ), the client application does not accept the server\ncertificate causing the TLS connection to fail."),Object(a.b)("p",null,"Suggested exemptions from Decryption:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Trusted Vendor domains and Trusted Subnets ( Low risk )")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Guest Networks")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Internal Server Backups or Trusted Flows")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Enterprise SaaS Application Traffic such as Office 365, Microsoft\nupdates, Apple updates etc.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"TLS traffic using TLS Heartbeat"))),Object(a.b)("h2",{id:"verificationtroubleshooting"},"Verification/Troubleshooting"),Object(a.b)("p",null,"The Connection Events Viewer provides insight into flow evaluation\nagainst an SSL policy rule. Not only does the event viewer help identify\nif the correct rule is being matched, it also reports any SSL errors as\npart of the TLS handshake. If you do not see SSL information for the\nflow of interest, ensure that logging is enabled in the SSL rules and\ncorresponding Access Control Policy rules."),Object(a.b)("p",null,"Use the output of the following commands to check for TLS\noversubscription and various TLS processing statistics:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"show snort tls-offload\n\nshow counters\n")),Object(a.b)("p",null,"Gather advanced information by using a combination of debugs such as:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"system support debug\n\nsystem support ssl-debug\n\n")),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"The ssl debugs should only be enabled and collected under\nsupervision by TAC. As SSL debugs are verbose, the right level of\ndebugging information needs to be configured depending on individual\nissues."))),Object(a.b)("h2",{id:"summary"},"Summary"),Object(a.b)("p",null,"SSL policies play an essential role in protecting against threats. Using\nan optimally configured SSL policy, protects your environment against\nattack vectors embedded in encrypted traffic and ensures a problem-free\nend-user experience. SSL policies slowly evolve as the needs of the\norganization change. Firepower Release 6.4 and greater use dedicated\nhardware-based decryption, by default, on Firepower appliances\n(Firepower platform series1000, 2100, 4100, and 9300) and cannot be\ndisabled without TAC's assistance. Using hardware acceleration for TLS\noperations ensures high performance without compromising security."),Object(a.b)("h2",{id:"references"},"References"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",{parentName:"li",href:"https://www.cisco.com/c/en/us/td/docs/security/firepower/660/configuration/guide/fpmc-config-guide-v66/understanding_traffic_decryption.html"},"FMC - Understanding Traffic Decryption"))))}b.isMDXComponent=!0}}]);